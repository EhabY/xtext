<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.eclipse.xtext</groupId>
		<artifactId>org.eclipse.xtext.nodeploy.parent</artifactId>
		<version>2.31.0-SNAPSHOT</version>
		<relativePath>../org.eclipse.xtext.nodeploy.parent</relativePath>
	</parent>
	<artifactId>org.eclipse.xtext.p2repository</artifactId>
	<packaging>eclipse-repository</packaging>

	<properties>
		<root-dir>${basedir}/..</root-dir>
		<!-- 
			Version qualifier of the target zip file 
			Usually this is the same as the (snaphsot) project version
			but for releases it is set to the release version.
		-->
		<zipFileVersion>2.31.0-SNAPSHOT</zipFileVersion>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-p2-repository-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>assemble-repository</goal>
						</goals>
						<configuration>
							<repositoryName>Xtext</repositoryName>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<copy todir="${root-dir}/build/p2-repository">
									<fileset dir="${basedir}/target/repository/" />
								</copy>
								<copy
									file="${basedir}/target/org.eclipse.xtext.p2repository-2.31.0-SNAPSHOT.zip"
									tofile="${root-dir}/build/org.eclipse.xtext.p2repository-${zipFileVersion}.zip">
								</copy>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<executions>
						<!-- sets the following properties 
						parsedVersion.majorVersion
						parsedVersion.minorVersion
						parsedVersion.incrementalVersion
						-->
						<execution>
							<id>parse-version</id>
							<goals>
								<goal>parse-version</goal>
							</goals>
							<phase>none</phase>
						</execution>
						<execution>
							<id>timestamp-replacement</id>
							<goals>
								<goal>regex-property</goal>
							</goals>
							<phase>none</phase>
							<configuration>
								<name>processedTimestamp</name>
								<value>${buildQualifier}</value>
								<regex>v(\d+)-(\d+)</regex>
								<replacement>$1$2</replacement>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!--
				If you need to do a "dry-run" for rsync,
				add the following argument line as the second one:
				<argument>-n</argument>
				-->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<executions>
						<execution>
							<id>rsync-update</id>
							<phase>none</phase>
							<goals>
								<goal>exec</goal>
							</goals>
							<configuration>
								<executable>rsync</executable>
								<arguments>
									<argument>-azvc</argument>
									<!-- exclude subdirectories -->
									<argument>--exclude=*/</argument>
									<argument>-e ssh</argument>
									<argument>${rsync-remote-source}</argument>
									<argument>${rsync-local-source}</argument>
								</arguments>
							</configuration>
						</execution>
						<execution>
							<id>rsync-commit</id>
							<phase>none</phase>
							<goals>
								<goal>exec</goal>
							</goals>
							<configuration>
								<executable>rsync</executable>
								<arguments>
									<argument>-azvc</argument>
									<argument>-e ssh</argument>
									<argument>${rsync-local-source}</argument>
									<argument>${rsync-remote-source}</argument>
								</arguments>
							</configuration>
						</execution>
						<execution>
							<!-- this will delete files on the destination that are
								not present locally -->
							<id>rsync-replace</id>
							<phase>none</phase>
							<goals>
								<goal>exec</goal>
							</goals>
							<configuration>
								<executable>rsync</executable>
								<arguments>
									<argument>-azvc</argument>
									<argument>--delete</argument>
									<argument>-e ssh</argument>
									<argument>${rsync-local-source}</argument>
									<argument>${rsync-remote-source}</argument>
								</arguments>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<executions>
						<execution>
							<id>copy-repository</id>
							<phase>none</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${current-release-directory}</outputDirectory>
								<resources>
									<resource>
										<directory>${project.build.directory}/repository</directory>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-clean-plugin</artifactId>
										<versionRange>[3.2.0,)</versionRange>
										<goals>
											<goal>clean</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<!-- Activate this profile to override the current snapshot version -->
			<id>release-snapshot</id>
			<properties>
				<remote-subdir>updates/nightly</remote-subdir>
				<!-- no subdirectory with qualifier -->
				<current-release-directory>${releases-directory}</current-release-directory>
			</properties>
			<build>
				<plugins>
					<!-- note that we don't first run rsync-update, so the result
						will be a complete override of the destination directory.
						We don't even create a composite update site -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>rsync-replace</id>
								<phase>verify</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-repository</id>
								<phase>package</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
