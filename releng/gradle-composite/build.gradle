apply from: 'helper.gradle'

task('generatePrefs') {
    doLast {
        def projects = getProjectsFromLocationProperties()
        if (!projects.isEmpty()) {
            projects.each {
                file ->
                doGenerateInProject(file)
            }
        } else {
            // backwards compatibility
            file('../../../').listFiles()
            .findAll { file ->
                file.isDirectory() && XTEXT_GRADLE_PROJECTS.any{p->file.name.contains(p)} && new File(file, "settings.gradle").exists()
            }.each { file -> 
                doGenerateInProject(file)
            }
        }    
    }
}

def doGenerateInProject(File file) {
    println  "generating buildship prefs for " + file.path
    if (!(new File(file, '.settings')).exists()) {
        new File(file, '.settings').mkdir();
    }
    (new File(file, '.settings/org.eclipse.buildship.core.prefs')).text = "connection.gradle.distribution=GRADLE_DISTRIBUTION(WRAPPER)\nconnection.project.dir="+rootDir+"\nproject.path=\\:"+file.name+"\n"
            
    file.listFiles().each { File fx -> 
        if (fx.isDirectory() && new File(fx, "build.gradle").exists()) {
            println  "generating buildship prefs for " + fx.path
            if (!(new File(fx, '.settings')).exists()) {
                new File(fx, '.settings').mkdir();
            }
            (new File(fx, '.settings/org.eclipse.buildship.core.prefs')).text = "connection.gradle.distribution=GRADLE_DISTRIBUTION(WRAPPER)\nconnection.project.dir="+rootDir+"\nproject.path=\\:"+fx.name+"\n"
        }

    }
}